filetype: rust

detect:
    filename: "\\.rs$"

rules:
    - identifier: "[a-zA-Z0-9_]+[(]+"
    - identifier: "\\b[A-Z_][0-9A-Z_]+\\b"
    - statement: "\\b(abstract|alignof|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|offsetof|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b"
    - identifier: "[a-z_]+!"
    - constant.number: "\\b[0-9]+\\b"
    - constant.bool: "\\b(true|false)\\b"
    - type: "\\b[A-Z]+[a-zA-Z_0-9]*[a-z]+[a-zA-Z_0-9]*\\b"
    - type: "\\b(bool|str|isize|usize|((i|u)(8|16|32|64))|f32|f64)\\b"
    - symbol.operator: "[-+*/%=<>.:;,~&|^!?]"
    - symbol.brackets: "[(){}]|\\[|\\]"

    - constant.string:
        start: "[bc]?\""
        end: "\""
        skip: '\\.'
        rules:
            - constant.specialChar: '\\.'

    - constant.string:
        start: "[bc]?r#\""
        end: "\"#"

    - constant.string:
        start: "[bc]?r##\""
        end: "\"##"

    - constant.string:
        start: "[bc]?r###\""
        end: "\"###"

    - constant.string:
        start: "[bc]?r####+\""
        end: "\"####+"

    - constant.string: "'(\\\\.|.)'"

    - constant.string:
        start: "'\""
        end: "'"

    - comment:
        start: "//"
        end: "$"
        rules:
            - todo: "(TODO|XXX|FIXME):?"

    - comment:
        start: "/\\*"
        end: "\\*/"
        rules:
            - todo: "(TODO|XXX|FIXME):?"

    - special:
        start: "#!\\["
        end: "\\]"
